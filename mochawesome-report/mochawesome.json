{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-10T17:25:39.061Z",
    "end": "2022-08-10T17:25:39.281Z",
    "duration": 220,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "09618d69-b14f-46ff-85db-75b67c1238a2",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "255953aa-6739-472b-b449-7f28c7e5b136",
          "title": "[@editUsertest]Edit User API Test",
          "fullFile": "C:\\Users\\DELL\\Documents\\QAE\\W3S2\\tugasapi\\testcase\\editUser.js",
          "file": "\\testcase\\editUser.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@editUsertest]Edit User API Test\"",
              "fullTitle": "[@editUsertest]Edit User API Test \"before all\" hook in \"[@editUsertest]Edit User API Test\"",
              "timedOut": false,
              "duration": 54,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Before Hook , Input User Data');\nlet response = await api.postUser(bodyRequestData);\ndataEditUser.declareUserId = response.body.id; // menyimpan id ke dataEditUser.js\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "945e7f96-185f-4423-8cf7-514774bbd532",
              "parentUUID": "255953aa-6739-472b-b449-7f28c7e5b136",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@editUsertest]Edit User API Test\"",
              "fullTitle": "[@editUsertest]Edit User API Test \"after all\" hook in \"[@editUsertest]Edit User API Test\"",
              "timedOut": false,
              "duration": 8,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('After hook, Delete User');\nresponse = await api.deleteUser(dataEditUser.declareUserId);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "80cc80f4-6398-4640-b30c-2fe98efe3d1a",
              "parentUUID": "255953aa-6739-472b-b449-7f28c7e5b136",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@positive-editUser] User Succsesfully updated data Occupation and Nationality",
              "fullTitle": "[@editUsertest]Edit User API Test [@positive-editUser] User Succsesfully updated data Occupation and Nationality",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(dataEditUser.editOccupationAndNationality(dataEditUser.declareUserId))\nexpect(response.status).to.equal(200);\nexpect(response.body.occupation).not.to.equal(bodyRequestData.occupation);\nexpect(response.body.occupation).not.to.equal(bodyRequestData.occupation);\nexpect(response.body).has.jsonSchema(jsonSchemas.editOccupationAndNationality);",
              "err": {},
              "uuid": "a2d9f9a5-2413-45c4-8d1c-a28d5cc98509",
              "parentUUID": "255953aa-6739-472b-b449-7f28c7e5b136",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@negative-ageIsZero] User Failed to Update Data When Age is Zero  ",
              "fullTitle": "[@editUsertest]Edit User API Test [@negative-ageIsZero] User Failed to Update Data When Age is Zero  ",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(dataEditUser.ageIsZero);\nexpect(response.status).to.equal(400);\nexpect(response.body.errorCode).to.equal(\"ER-03\");\nexpect(response.body.message).to.equal('you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender');\nexpect(response.body).has.jsonSchema(jsonSchemas.ageIsZero);",
              "err": {},
              "uuid": "72d3344d-463a-4433-bdc5-251acc2d2728",
              "parentUUID": "255953aa-6739-472b-b449-7f28c7e5b136",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@negative-arrayIsEmpty] User Failed To Update Data When Array is Empty",
              "fullTitle": "[@editUsertest]Edit User API Test [@negative-arrayIsEmpty] User Failed To Update Data When Array is Empty",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(dataEditUser.arrayIsEmpty);\nexpect(response.status).to.equal(400);\nexpect(response.body.errorCode).to.equal(\"ER-03\");\nexpect(response.body.message).to.equal('you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender');\nexpect(response.body).has.jsonSchema(jsonSchemas.arrayIsEmpty);",
              "err": {},
              "uuid": "b1373c94-7944-4bd3-9ee2-639a479f6bff",
              "parentUUID": "255953aa-6739-472b-b449-7f28c7e5b136",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@negative-idIsNull] User Failed To Update Data When Id Is Null",
              "fullTitle": "[@editUsertest]Edit User API Test [@negative-idIsNull] User Failed To Update Data When Id Is Null",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(dataEditUser.idIsNull);\nexpect(response.status).to.equal(404);\nexpect(response.body.errorCode).to.equal(\"ER-01\");\nexpect(response.body.message).to.equal(\"user not found\");\nexpect(response.body).has.jsonSchema(jsonSchemas.idIsNull);",
              "err": {},
              "uuid": "12ab4007-8064-41aa-a890-a23d5efba955",
              "parentUUID": "255953aa-6739-472b-b449-7f28c7e5b136",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2d9f9a5-2413-45c4-8d1c-a28d5cc98509",
            "72d3344d-463a-4433-bdc5-251acc2d2728",
            "b1373c94-7944-4bd3-9ee2-639a479f6bff",
            "12ab4007-8064-41aa-a890-a23d5efba955"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 52,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5b1fbeb1-0e78-4738-aafc-223ff39480e0",
          "title": "[@getUserTest]Get User API Test",
          "fullFile": "C:\\Users\\DELL\\Documents\\QAE\\W3S2\\tugasapi\\testcase\\getUser.js",
          "file": "\\testcase\\getUser.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@getUserTest]Get User API Test\"",
              "fullTitle": "[@getUserTest]Get User API Test \"before all\" hook in \"[@getUserTest]Get User API Test\"",
              "timedOut": false,
              "duration": 14,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Before Hook, Input User Data');\nlet response = await api.postUser(bodyRequestData);\ndataEditUser.declareUserId = response.body.id\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "b4beae9c-0e1e-44d0-82ce-0c4183143fe3",
              "parentUUID": "5b1fbeb1-0e78-4738-aafc-223ff39480e0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@getUserTest]Get User API Test\"",
              "fullTitle": "[@getUserTest]Get User API Test \"after all\" hook in \"[@getUserTest]Get User API Test\"",
              "timedOut": false,
              "duration": 38,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('After Hook,Delete User Data')\nlet response = await api.deleteUser(dataEditUser.declareUserId);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "13fe1c52-5fef-4843-a52e-cadc6d9b5d45",
              "parentUUID": "5b1fbeb1-0e78-4738-aafc-223ff39480e0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@positive-getUser] Get User Data with Valid Id",
              "fullTitle": "[@getUserTest]Get User API Test [@positive-getUser] Get User Data with Valid Id",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.getUserbyId(dataEditUser.declareUserId);\nexpect(response.status).to.equal(200);\nexpect(response.body.id).to.equal(dataEditUser.declareUserId);\nexpect(response.body).has.jsonSchema(jsonSchemas.getUser);",
              "err": {},
              "uuid": "bd73c5fd-7526-4d42-b45f-58ed1be20823",
              "parentUUID": "5b1fbeb1-0e78-4738-aafc-223ff39480e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@negative-getUser] Get User Data With invalid Id",
              "fullTitle": "[@getUserTest]Get User API Test [@negative-getUser] Get User Data With invalid Id",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.getUserbyId('pastierror');\nexpect(response.status).to.equal(404);\nexpect(response.body.errorCode).to.equal('ER-01');\nexpect(response.body.message).to.equal('user not found');\nexpect(response.body).has.jsonSchema(jsonSchemas.invalidUserId);",
              "err": {},
              "uuid": "c062853d-0684-4963-a74a-9bcd86407fb7",
              "parentUUID": "5b1fbeb1-0e78-4738-aafc-223ff39480e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd73c5fd-7526-4d42-b45f-58ed1be20823",
            "c062853d-0684-4963-a74a-9bcd86407fb7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}