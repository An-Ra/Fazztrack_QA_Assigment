{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-01T02:49:34.298Z",
    "end": "2022-09-01T02:49:34.896Z",
    "duration": 598,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "577f64b7-506a-491d-8744-404f552a41d9",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "398f6c2c-c975-46d2-b679-1d67b503930c",
          "title": "[@editUsertest]Edit User API Test",
          "fullFile": "C:\\Users\\DELL\\Documents\\QAE\\Fazztrack_QA_Assigment\\Assignment_4\\testcase\\editUser.js",
          "file": "\\testcase\\editUser.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@editUsertest]Edit User API Test\"",
              "fullTitle": "[@editUsertest]Edit User API Test \"before all\" hook in \"[@editUsertest]Edit User API Test\"",
              "timedOut": false,
              "duration": 390,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Before Hook , Input User Data');\nlet response = await api.postUser(bodyRequestData);\ndataEditUser.declareUserId = response.body.id; // menyimpan id ke dataEditUser.js\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "1f488912-d64a-4dd2-92ef-f3dd712a5b9b",
              "parentUUID": "398f6c2c-c975-46d2-b679-1d67b503930c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@editUsertest]Edit User API Test\"",
              "fullTitle": "[@editUsertest]Edit User API Test \"after all\" hook in \"[@editUsertest]Edit User API Test\"",
              "timedOut": false,
              "duration": 22,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('After hook, Delete User');\nresponse = await api.deleteUser(dataEditUser.declareUserId);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "d946115c-e165-41b3-9ac3-b4782921aff2",
              "parentUUID": "398f6c2c-c975-46d2-b679-1d67b503930c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@positive-editUser] User Succsesfully updated data Occupation and Nationality",
              "fullTitle": "[@editUsertest]Edit User API Test [@positive-editUser] User Succsesfully updated data Occupation and Nationality",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(dataEditUser.editOccupationAndNationality(dataEditUser.declareUserId))\nexpect(response.status).to.equal(200);\nexpect(response.body.occupation).not.to.equal(bodyRequestData.occupation);\nexpect(response.body.occupation).not.to.equal(bodyRequestData.occupation);\nexpect(response.body).has.jsonSchema(jsonSchemas.editOccupationAndNationality);",
              "err": {},
              "uuid": "a831a34d-3e53-4f7f-b57b-7cca20746c03",
              "parentUUID": "398f6c2c-c975-46d2-b679-1d67b503930c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@negative-ageIsZero] User Failed to Update Data When Age is Zero  ",
              "fullTitle": "[@editUsertest]Edit User API Test [@negative-ageIsZero] User Failed to Update Data When Age is Zero  ",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(dataEditUser.ageIsZero);\nexpect(response.status).to.equal(400);\nexpect(response.body.errorCode).to.equal(\"ER-03\");\nexpect(response.body.message).to.equal('you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender');\nexpect(response.body).has.jsonSchema(jsonSchemas.ageIsZero);",
              "err": {},
              "uuid": "3963cf7c-f455-48c4-8ea5-3aaf226fd8c9",
              "parentUUID": "398f6c2c-c975-46d2-b679-1d67b503930c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@negative-arrayIsEmpty] User Failed To Update Data When Array is Empty",
              "fullTitle": "[@editUsertest]Edit User API Test [@negative-arrayIsEmpty] User Failed To Update Data When Array is Empty",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(dataEditUser.arrayIsEmpty);\nexpect(response.status).to.equal(400);\nexpect(response.body.errorCode).to.equal(\"ER-03\");\nexpect(response.body.message).to.equal('you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender');\nexpect(response.body).has.jsonSchema(jsonSchemas.arrayIsEmpty);",
              "err": {},
              "uuid": "5e2ab9f4-58c7-46ab-af5e-92af25778507",
              "parentUUID": "398f6c2c-c975-46d2-b679-1d67b503930c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@negative-idIsNull] User Failed To Update Data When Id Is Null",
              "fullTitle": "[@editUsertest]Edit User API Test [@negative-idIsNull] User Failed To Update Data When Id Is Null",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(dataEditUser.idIsNull);\nexpect(response.status).to.equal(404);\nexpect(response.body.errorCode).to.equal(\"ER-01\");\nexpect(response.body.message).to.equal(\"user not found\");\nexpect(response.body).has.jsonSchema(jsonSchemas.idIsNull);",
              "err": {},
              "uuid": "b06547e4-09d0-4641-bb86-d857670780cb",
              "parentUUID": "398f6c2c-c975-46d2-b679-1d67b503930c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a831a34d-3e53-4f7f-b57b-7cca20746c03",
            "3963cf7c-f455-48c4-8ea5-3aaf226fd8c9",
            "5e2ab9f4-58c7-46ab-af5e-92af25778507",
            "b06547e4-09d0-4641-bb86-d857670780cb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 88,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cea411e1-c5ae-4ede-9f8d-06c8de7fb35a",
          "title": "[@getUserTest]Get User API Test",
          "fullFile": "C:\\Users\\DELL\\Documents\\QAE\\Fazztrack_QA_Assigment\\Assignment_4\\testcase\\getUser.js",
          "file": "\\testcase\\getUser.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@getUserTest]Get User API Test\"",
              "fullTitle": "[@getUserTest]Get User API Test \"before all\" hook in \"[@getUserTest]Get User API Test\"",
              "timedOut": false,
              "duration": 15,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Before Hook, Input User Data');\nlet response = await api.postUser(bodyRequestData);\ndataEditUser.declareUserId = response.body.id\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "90200d81-002f-4cc2-a7d4-ba5cd9754567",
              "parentUUID": "cea411e1-c5ae-4ede-9f8d-06c8de7fb35a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@getUserTest]Get User API Test\"",
              "fullTitle": "[@getUserTest]Get User API Test \"after all\" hook in \"[@getUserTest]Get User API Test\"",
              "timedOut": false,
              "duration": 11,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('After Hook,Delete User Data')\nlet response = await api.deleteUser(dataEditUser.declareUserId);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "94701425-ba52-4dce-9415-4a6ce597d910",
              "parentUUID": "cea411e1-c5ae-4ede-9f8d-06c8de7fb35a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@positive-getUser] Get User Data with Valid Id",
              "fullTitle": "[@getUserTest]Get User API Test [@positive-getUser] Get User Data with Valid Id",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.getUserbyId(dataEditUser.declareUserId);\nexpect(response.status).to.equal(200);\nexpect(response.body.id).to.equal(dataEditUser.declareUserId);\nexpect(response.body).has.jsonSchema(jsonSchemas.getUser);",
              "err": {},
              "uuid": "ecdb82a5-b7c7-469f-9c4c-eb3c13ce820f",
              "parentUUID": "cea411e1-c5ae-4ede-9f8d-06c8de7fb35a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@negative-getUser] Get User Data With invalid Id",
              "fullTitle": "[@getUserTest]Get User API Test [@negative-getUser] Get User Data With invalid Id",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.getUserbyId('pastierror');\nexpect(response.status).to.equal(404);\nexpect(response.body.errorCode).to.equal('ER-01');\nexpect(response.body.message).to.equal('user not found');\nexpect(response.body).has.jsonSchema(jsonSchemas.invalidUserId);",
              "err": {},
              "uuid": "3279bd0f-b7f7-48ab-88a0-12593aa234ee",
              "parentUUID": "cea411e1-c5ae-4ede-9f8d-06c8de7fb35a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ecdb82a5-b7c7-469f-9c4c-eb3c13ce820f",
            "3279bd0f-b7f7-48ab-88a0-12593aa234ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 52,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}